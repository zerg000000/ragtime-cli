name: Release

on:
  release:
    types: [created]

env:
  TOOL_DEPS_VERSION: '1.10.1.469'
  GRAALVM_VERSION: '19.3.0.java11'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:   
        os: [ubuntu-latest, macos-latest]
        jdbc_driver: [postgres]

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        id: cache
        with:
          path: /root/.m2/
          key: deps-v2-${{ hashFiles('deps.edn') }}
      - uses: DeLaGuardo/setup-graalvm@2.0
        with:
          graalvm-version: ${{ env.GRAALVM_VERSION }}
      - name: Install GraalVM native-image plugin
        run: gu install native-image
      - uses: DeLaGuardo/setup-clojure@2.0
        with:
          tools-deps: ${{ env.TOOL_DEPS_VERSION }}
      - name: Compile GraalVM Native Image
        run: clojure -A:native-image --graalvm-home $JAVA_HOME
      - name: Zip as lambda.zip
        env:
          OS: ${{ matrix.os }}
        run: |
          sh bin/copy-files.sh
          cp target/ragtime-cli ragtime-cli
          cp bin/bootstrap bootstrap
          chmod 755 ragtime-cli bootstrap
          zip lambda-${{ matrix.os }}-${{ matrix.jdbc_driver }}.zip bootstrap ragtime-cli libsunec.so libsunec.a
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: lambda-*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true